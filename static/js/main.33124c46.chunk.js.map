{"version":3,"sources":["components/NavElement/index.js","constants/index.js","components/Navbar/index.js","components/AppContent2/index.js","components/AppContent3/index.js","components/TicToc/TicTocElement/index.js","components/TicToc/TicTocRow/index.js","components/TicToc/index.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["NavElement","state","className","to","this","props","element","React","Component","TrueCase","navLInks","Navbar","navLinks","map","a","b","AppContent2","AppContent3","TicTocElement","boxClicked","e","target","classList","length","isGameOver","ev","add","isCompleted","row","col","onClick","TicTocRow","eve","TicToc","setColor","isGameCompleted","isGreen","setState","checkCompleted","green","red","y","document","getElementsByClassName","s","contains","push","yy","every","value","index","isGreenwin","console","log","class","NavRoutes","default","path","component","Tictoc","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.33124c46.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './index.css';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nclass NavElement extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={}\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"navelement\">\r\n                {/* {this.props.element} */}\r\n                <Link to={this.props.element} >{this.props.element} </Link>\r\n        {/* <a href={this.props.element}>{this.props.element}</a> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NavElement;","var navLInks = [\"Tictoc\",\"weee\"];\r\n export var TrueCase = [\r\n    [0,1,2],\r\n    [0,3,6],\r\n    [0,4,8],\r\n\r\n    [1,4,7],\r\n    \r\n    [2,4,6],\r\n    [2,5,8],\r\n\r\n    [3,4,5],\r\n\r\n    [6,7,8]\r\n]\r\nexport default navLInks;","import React from \"react\";\r\nimport './index.css';\r\nimport NavElement from '../NavElement';  \r\nimport navLinks from '../../constants';\r\n\r\nclass Navbar extends React.Component{\r\n    render(){\r\n        //debugger;\r\n        return(\r\n            <div className=\"navbar\">\r\n                {navLinks.map((a,b)=><NavElement key={b} element={a}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react'\r\n\r\nclass AppContent2 extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                AppContent2\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default  AppContent2","import React, { Component } from 'react'\r\n\r\nclass AppContent3 extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                AppContent3\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default  AppContent3\r\n","import React, { Component } from 'react'\r\nimport './index.css';\r\n\r\nclass TicTocElement extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={}\r\n    }\r\n    boxClicked=(e)=>{\r\n        debugger;\r\n        if(e.target.classList.length == 2 && !this.props.isGameOver)\r\n        {\r\n            if(this.props.ev()){\r\n                e.target.classList.add(\"green\");\r\n            }else{\r\n                e.target.classList.add(\"red\");\r\n            }\r\n            this.props.isCompleted();\r\n        }\r\n    }\r\n    render() {\r\n        var {row, col}=this.props;\r\n        \r\n        return (\r\n            <div className=\"TicTocElement symbol\" onClick={this.boxClicked}>\r\n                {/* {row} {col} */}\r\n                {/* <div className=\"symbol\"></div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default  TicTocElement;\r\n","import React, { Component } from 'react'\r\nimport TicTocElement from '../TicTocElement'\r\n\r\nclass TicTocRow extends Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TicTocElement row={this.props.row} col={1}  ev={this.props.eve}  isCompleted={this.props.isCompleted}  isGameOver={this.props.isGameOver}/>\r\n                <TicTocElement  row={this.props.row} col={2} ev={this.props.eve} isCompleted={this.props.isCompleted} isGameOver={this.props.isGameOver} />\r\n                <TicTocElement  row={this.props.row} col={3} ev={this.props.eve} isCompleted={this.props.isCompleted} isGameOver={this.props.isGameOver}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default  TicTocRow;","import React, { Component } from 'react'\r\nimport TicTocRow from './TicTocRow'\r\nimport {TrueCase} from '../../constants';\r\nimport './index.css';\r\nclass TicToc extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            isGreen:true,\r\n            isGameCompleted:false,\r\n            isGreenwin:false\r\n        }\r\n    }\r\n    setColor=()=>{\r\n        debugger;\r\n        if(!this.state.isGameCompleted){\r\n        //this.checkCompleted();\r\n        if(this.state.isGreen){\r\n            this.setState({isGreen:false});\r\n            return true;\r\n        }else{\r\n            this.setState({isGreen:true});\r\n            return false;\r\n        }\r\n    }\r\n        \r\n    };\r\n    checkCompleted=()=>{\r\n        var green=[],red=[];\r\n        var y = document.getElementsByClassName(\"TicTocElement symbol\");\r\n        for(let s =0 ;s<y.length;s++){\r\n            debugger;\r\n            if(y[s].classList.contains(\"green\")){\r\n                green.push(s);\r\n            }\r\n            if(y[s].classList.contains(\"red\")){\r\n                red.push(s);\r\n            }\r\n        }\r\n        var trues = [];\r\n        for(let yy =0 ;yy<TrueCase.length;yy++){\r\n            if(TrueCase[yy].length === red.length && TrueCase[yy].every((value, index) => value === red[index])){\r\n                this.setState({isGameCompleted:true,isGreenwin:false});\r\n                console.log(\"red win\");\r\n            }else if(TrueCase[yy].length === green.length && TrueCase[yy].every((value, index) => value === green[index])){\r\n                console.log(\"Green win\");\r\n                this.setState({isGameCompleted:true,isGreenwin:true});\r\n            }\r\n            console.log(\"checking ... \"+y);\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <TicTocRow row={1} eve={this.setColor} isCompleted={this.checkCompleted} isGameOver={this.state.isGameCompleted}/>\r\n                <TicTocRow row={2} eve={this.setColor} isCompleted={this.checkCompleted} isGameOver={this.state.isGameCompleted}/>\r\n                <TicTocRow row={3} eve={this.setColor} isCompleted={this.checkCompleted} isGameOver={this.state.isGameCompleted}/>\r\n                {this.state.isGameCompleted && this.state.isGreenwin ? <div class='green win'>Green Win</div> : this.state.isGameCompleted && !this.state.isGreenwin ? <div class='red win'>Red Win</div> : \"\"}\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default  TicToc;\r\n","import React from \"react\";\r\nimport { Switch, Route,Redirect } from 'react-router-dom';\r\nimport AppContent2 from \"./components/AppContent2\";\r\nimport AppContent3 from \"./components/AppContent3\";\r\nimport Tictoc from \"./components/TicToc\";\r\nclass NavRoutes extends React.Component{\r\n    render(){\r\n        return(\r\n            <Switch>\r\n                <Route default path='/Tictoc' component={Tictoc}/>\r\n                <Route path='/link2' component={AppContent2} />\r\n                <Route path='/link3' component={AppContent3}/>\r\n                <Route exact path=\"/\"> <Redirect to=\"/Tictoc\" /></Route>\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\nexport default  NavRoutes;","// import logo from './logo.svg';\nimport './styles/App.css';\n import React from \"react\";\nimport Navbar from './components/Navbar';\nimport NavRoutes from './routes';\n\n\nclass App extends React.Component {\n  render(){\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <NavRoutes />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}